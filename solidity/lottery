// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

contract Lottery {

    address payable[] public players; // payable to receive currency
    address public manager;
    address payable public winner;

    constructor(){
        manager = msg.sender;
    }

    function participate() public payable {
        require (msg.value == 0.01 ether, "Ether is not sufficient");
        players.push(payable(msg.sender));
    }

    function random() public view returns(uint) {
        return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp, players.length)));
    }

    function getBalance() public view returns(uint) {
        require(manager == msg.sender, "you are not the manager");
        return address(this).balance;
    }

    function pickWinner() public {
        require(manager == msg.sender);
        require (players.length> 0);
        uint r=random();
        uint index = r%players.length;
        winner = players[index];
        winner.transfer(getBalance());
        players=new address payable[](0);
    }

}
